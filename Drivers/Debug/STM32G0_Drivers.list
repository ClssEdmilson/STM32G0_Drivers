
STM32G0_Drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000bc  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000424  080000bc  080000bc  000100bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080004e0  080004e8  000104e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080004e0  080004e0  000104e8  2**0
                  CONTENTS
  4 .ARM          00000000  080004e0  080004e0  000104e8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080004e0  080004e8  000104e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080004e0  080004e0  000104e0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080004e4  080004e4  000104e4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000104e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080004e8  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080004e8  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  000104e8  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000073e  00000000  00000000  00010510  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000001cd  00000000  00000000  00010c4e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000a8  00000000  00000000  00010e20  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000080  00000000  00000000  00010ec8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001344  00000000  00000000  00010f48  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000a6f  00000000  00000000  0001228c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00005140  00000000  00000000  00012cfb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  00017e3b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000018c  00000000  00000000  00017e90  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000bc <__do_global_dtors_aux>:
 80000bc:	b510      	push	{r4, lr}
 80000be:	4c06      	ldr	r4, [pc, #24]	; (80000d8 <__do_global_dtors_aux+0x1c>)
 80000c0:	7823      	ldrb	r3, [r4, #0]
 80000c2:	2b00      	cmp	r3, #0
 80000c4:	d107      	bne.n	80000d6 <__do_global_dtors_aux+0x1a>
 80000c6:	4b05      	ldr	r3, [pc, #20]	; (80000dc <__do_global_dtors_aux+0x20>)
 80000c8:	2b00      	cmp	r3, #0
 80000ca:	d002      	beq.n	80000d2 <__do_global_dtors_aux+0x16>
 80000cc:	4804      	ldr	r0, [pc, #16]	; (80000e0 <__do_global_dtors_aux+0x24>)
 80000ce:	e000      	b.n	80000d2 <__do_global_dtors_aux+0x16>
 80000d0:	bf00      	nop
 80000d2:	2301      	movs	r3, #1
 80000d4:	7023      	strb	r3, [r4, #0]
 80000d6:	bd10      	pop	{r4, pc}
 80000d8:	20000000 	.word	0x20000000
 80000dc:	00000000 	.word	0x00000000
 80000e0:	080004c8 	.word	0x080004c8

080000e4 <frame_dummy>:
 80000e4:	4b04      	ldr	r3, [pc, #16]	; (80000f8 <frame_dummy+0x14>)
 80000e6:	b510      	push	{r4, lr}
 80000e8:	2b00      	cmp	r3, #0
 80000ea:	d003      	beq.n	80000f4 <frame_dummy+0x10>
 80000ec:	4903      	ldr	r1, [pc, #12]	; (80000fc <frame_dummy+0x18>)
 80000ee:	4804      	ldr	r0, [pc, #16]	; (8000100 <frame_dummy+0x1c>)
 80000f0:	e000      	b.n	80000f4 <frame_dummy+0x10>
 80000f2:	bf00      	nop
 80000f4:	bd10      	pop	{r4, pc}
 80000f6:	46c0      	nop			; (mov r8, r8)
 80000f8:	00000000 	.word	0x00000000
 80000fc:	20000004 	.word	0x20000004
 8000100:	080004c8 	.word	0x080004c8

08000104 <GPIO_Init>:
 *      Author: edmil
 */

#include "STM32G071xx_GPIO.h"

void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 8000104:	b580      	push	{r7, lr}
 8000106:	b082      	sub	sp, #8
 8000108:	af00      	add	r7, sp, #0
 800010a:	6078      	str	r0, [r7, #4]
	*/




	Bit2Write(pGPIOHandle->pGPIOx->OSPEEDR, pGPIOHandle->GPIOPinConfig.GPIO_PinSpeed, pGPIOHandle->GPIOPinConfig.GPIO_PinNumber);
 800010c:	687b      	ldr	r3, [r7, #4]
 800010e:	681b      	ldr	r3, [r3, #0]
 8000110:	689a      	ldr	r2, [r3, #8]
 8000112:	687b      	ldr	r3, [r7, #4]
 8000114:	799b      	ldrb	r3, [r3, #6]
 8000116:	0019      	movs	r1, r3
 8000118:	687b      	ldr	r3, [r7, #4]
 800011a:	791b      	ldrb	r3, [r3, #4]
 800011c:	005b      	lsls	r3, r3, #1
 800011e:	4099      	lsls	r1, r3
 8000120:	000b      	movs	r3, r1
 8000122:	0019      	movs	r1, r3
 8000124:	687b      	ldr	r3, [r7, #4]
 8000126:	681b      	ldr	r3, [r3, #0]
 8000128:	430a      	orrs	r2, r1
 800012a:	609a      	str	r2, [r3, #8]
	Bit2Clr(pGPIOHandle->pGPIOx->MODER, pGPIOHandle->GPIOPinConfig.GPIO_PinNumber);
 800012c:	687b      	ldr	r3, [r7, #4]
 800012e:	681b      	ldr	r3, [r3, #0]
 8000130:	681a      	ldr	r2, [r3, #0]
 8000132:	687b      	ldr	r3, [r7, #4]
 8000134:	791b      	ldrb	r3, [r3, #4]
 8000136:	005b      	lsls	r3, r3, #1
 8000138:	2103      	movs	r1, #3
 800013a:	4099      	lsls	r1, r3
 800013c:	000b      	movs	r3, r1
 800013e:	43db      	mvns	r3, r3
 8000140:	0019      	movs	r1, r3
 8000142:	687b      	ldr	r3, [r7, #4]
 8000144:	681b      	ldr	r3, [r3, #0]
 8000146:	400a      	ands	r2, r1
 8000148:	601a      	str	r2, [r3, #0]
	Bit2Write(pGPIOHandle->pGPIOx->MODER, pGPIOHandle->GPIOPinConfig.GPIO_PinMode, pGPIOHandle->GPIOPinConfig.GPIO_PinNumber);
 800014a:	687b      	ldr	r3, [r7, #4]
 800014c:	681b      	ldr	r3, [r3, #0]
 800014e:	681a      	ldr	r2, [r3, #0]
 8000150:	687b      	ldr	r3, [r7, #4]
 8000152:	795b      	ldrb	r3, [r3, #5]
 8000154:	0019      	movs	r1, r3
 8000156:	687b      	ldr	r3, [r7, #4]
 8000158:	791b      	ldrb	r3, [r3, #4]
 800015a:	005b      	lsls	r3, r3, #1
 800015c:	4099      	lsls	r1, r3
 800015e:	000b      	movs	r3, r1
 8000160:	0019      	movs	r1, r3
 8000162:	687b      	ldr	r3, [r7, #4]
 8000164:	681b      	ldr	r3, [r3, #0]
 8000166:	430a      	orrs	r2, r1
 8000168:	601a      	str	r2, [r3, #0]
	Bit2Write(pGPIOHandle->pGPIOx->PUPDR, pGPIOHandle->GPIOPinConfig.GPIO_PinPuPd, pGPIOHandle->GPIOPinConfig.GPIO_PinNumber);
 800016a:	687b      	ldr	r3, [r7, #4]
 800016c:	681b      	ldr	r3, [r3, #0]
 800016e:	68da      	ldr	r2, [r3, #12]
 8000170:	687b      	ldr	r3, [r7, #4]
 8000172:	79db      	ldrb	r3, [r3, #7]
 8000174:	0019      	movs	r1, r3
 8000176:	687b      	ldr	r3, [r7, #4]
 8000178:	791b      	ldrb	r3, [r3, #4]
 800017a:	005b      	lsls	r3, r3, #1
 800017c:	4099      	lsls	r1, r3
 800017e:	000b      	movs	r3, r1
 8000180:	0019      	movs	r1, r3
 8000182:	687b      	ldr	r3, [r7, #4]
 8000184:	681b      	ldr	r3, [r3, #0]
 8000186:	430a      	orrs	r2, r1
 8000188:	60da      	str	r2, [r3, #12]

	BitWrite(pGPIOHandle->pGPIOx->OTYPER, pGPIOHandle->GPIOPinConfig.GPIO_PinOPType, pGPIOHandle->GPIOPinConfig.GPIO_PinNumber);
 800018a:	687b      	ldr	r3, [r7, #4]
 800018c:	681b      	ldr	r3, [r3, #0]
 800018e:	685a      	ldr	r2, [r3, #4]
 8000190:	687b      	ldr	r3, [r7, #4]
 8000192:	7a1b      	ldrb	r3, [r3, #8]
 8000194:	0019      	movs	r1, r3
 8000196:	687b      	ldr	r3, [r7, #4]
 8000198:	791b      	ldrb	r3, [r3, #4]
 800019a:	4099      	lsls	r1, r3
 800019c:	000b      	movs	r3, r1
 800019e:	0019      	movs	r1, r3
 80001a0:	687b      	ldr	r3, [r7, #4]
 80001a2:	681b      	ldr	r3, [r3, #0]
 80001a4:	430a      	orrs	r2, r1
 80001a6:	605a      	str	r2, [r3, #4]

	if(pGPIOHandle->GPIOPinConfig.GPIO_PinMode == GPIO_MODE_ALT){
 80001a8:	687b      	ldr	r3, [r7, #4]
 80001aa:	795b      	ldrb	r3, [r3, #5]
 80001ac:	2b02      	cmp	r3, #2
 80001ae:	d125      	bne.n	80001fc <GPIO_Init+0xf8>
		if(pGPIOHandle->GPIOPinConfig.GPIO_PinNumber <= GPIO_PIN_8){
 80001b0:	687b      	ldr	r3, [r7, #4]
 80001b2:	791b      	ldrb	r3, [r3, #4]
 80001b4:	2b08      	cmp	r3, #8
 80001b6:	d810      	bhi.n	80001da <GPIO_Init+0xd6>
			BiteWrite(pGPIOHandle->pGPIOx->AFL[0], pGPIOHandle->GPIOPinConfig.GPIO_PinAltFunct, pGPIOHandle->GPIOPinConfig.GPIO_PinNumber);
 80001b8:	687b      	ldr	r3, [r7, #4]
 80001ba:	681b      	ldr	r3, [r3, #0]
 80001bc:	6a1a      	ldr	r2, [r3, #32]
 80001be:	687b      	ldr	r3, [r7, #4]
 80001c0:	7a5b      	ldrb	r3, [r3, #9]
 80001c2:	0019      	movs	r1, r3
 80001c4:	687b      	ldr	r3, [r7, #4]
 80001c6:	791b      	ldrb	r3, [r3, #4]
 80001c8:	009b      	lsls	r3, r3, #2
 80001ca:	4099      	lsls	r1, r3
 80001cc:	000b      	movs	r3, r1
 80001ce:	0019      	movs	r1, r3
 80001d0:	687b      	ldr	r3, [r7, #4]
 80001d2:	681b      	ldr	r3, [r3, #0]
 80001d4:	430a      	orrs	r2, r1
 80001d6:	621a      	str	r2, [r3, #32]
		}else{
			BiteWrite(pGPIOHandle->pGPIOx->AFL[1], pGPIOHandle->GPIOPinConfig.GPIO_PinAltFunct, (pGPIOHandle->GPIOPinConfig.GPIO_PinNumber - 8));
		}
	}

};
 80001d8:	e010      	b.n	80001fc <GPIO_Init+0xf8>
			BiteWrite(pGPIOHandle->pGPIOx->AFL[1], pGPIOHandle->GPIOPinConfig.GPIO_PinAltFunct, (pGPIOHandle->GPIOPinConfig.GPIO_PinNumber - 8));
 80001da:	687b      	ldr	r3, [r7, #4]
 80001dc:	681b      	ldr	r3, [r3, #0]
 80001de:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80001e0:	687b      	ldr	r3, [r7, #4]
 80001e2:	7a5b      	ldrb	r3, [r3, #9]
 80001e4:	0019      	movs	r1, r3
 80001e6:	687b      	ldr	r3, [r7, #4]
 80001e8:	791b      	ldrb	r3, [r3, #4]
 80001ea:	3b08      	subs	r3, #8
 80001ec:	009b      	lsls	r3, r3, #2
 80001ee:	4099      	lsls	r1, r3
 80001f0:	000b      	movs	r3, r1
 80001f2:	0019      	movs	r1, r3
 80001f4:	687b      	ldr	r3, [r7, #4]
 80001f6:	681b      	ldr	r3, [r3, #0]
 80001f8:	430a      	orrs	r2, r1
 80001fa:	625a      	str	r2, [r3, #36]	; 0x24
};
 80001fc:	46c0      	nop			; (mov r8, r8)
 80001fe:	46bd      	mov	sp, r7
 8000200:	b002      	add	sp, #8
 8000202:	bd80      	pop	{r7, pc}

08000204 <GPIO_PCLKControl>:
	else if(pGPIOx == GPIOF){
		GPIOF_RESET();
	};
};

void GPIO_PCLKControl(GPIO_RegDef_t *pGPIOx, uint8_t value){
 8000204:	b580      	push	{r7, lr}
 8000206:	b082      	sub	sp, #8
 8000208:	af00      	add	r7, sp, #0
 800020a:	6078      	str	r0, [r7, #4]
 800020c:	000a      	movs	r2, r1
 800020e:	1cfb      	adds	r3, r7, #3
 8000210:	701a      	strb	r2, [r3, #0]

	if(value == ENABLE){
 8000212:	1cfb      	adds	r3, r7, #3
 8000214:	781b      	ldrb	r3, [r3, #0]
 8000216:	2b01      	cmp	r3, #1
 8000218:	d166      	bne.n	80002e8 <GPIO_PCLKControl+0xe4>

		if(pGPIOx == GPIOA){
 800021a:	687a      	ldr	r2, [r7, #4]
 800021c:	23a0      	movs	r3, #160	; 0xa0
 800021e:	05db      	lsls	r3, r3, #23
 8000220:	429a      	cmp	r2, r3
 8000222:	d10c      	bne.n	800023e <GPIO_PCLKControl+0x3a>
			GPIOA_CLK_EN();
 8000224:	4b53      	ldr	r3, [pc, #332]	; (8000374 <GPIO_PCLKControl+0x170>)
 8000226:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000228:	4b52      	ldr	r3, [pc, #328]	; (8000374 <GPIO_PCLKControl+0x170>)
 800022a:	2101      	movs	r1, #1
 800022c:	438a      	bics	r2, r1
 800022e:	635a      	str	r2, [r3, #52]	; 0x34
 8000230:	4b50      	ldr	r3, [pc, #320]	; (8000374 <GPIO_PCLKControl+0x170>)
 8000232:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000234:	4b4f      	ldr	r3, [pc, #316]	; (8000374 <GPIO_PCLKControl+0x170>)
 8000236:	2101      	movs	r1, #1
 8000238:	430a      	orrs	r2, r1
 800023a:	635a      	str	r2, [r3, #52]	; 0x34

		else if(pGPIOx == GPIOF){
			GPIOF_CLK_DIS();
		};
	};
};
 800023c:	e096      	b.n	800036c <GPIO_PCLKControl+0x168>
		else if(pGPIOx == GPIOB){
 800023e:	687b      	ldr	r3, [r7, #4]
 8000240:	4a4d      	ldr	r2, [pc, #308]	; (8000378 <GPIO_PCLKControl+0x174>)
 8000242:	4293      	cmp	r3, r2
 8000244:	d10c      	bne.n	8000260 <GPIO_PCLKControl+0x5c>
			GPIOB_CLK_EN();
 8000246:	4b4b      	ldr	r3, [pc, #300]	; (8000374 <GPIO_PCLKControl+0x170>)
 8000248:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800024a:	4b4a      	ldr	r3, [pc, #296]	; (8000374 <GPIO_PCLKControl+0x170>)
 800024c:	2102      	movs	r1, #2
 800024e:	438a      	bics	r2, r1
 8000250:	635a      	str	r2, [r3, #52]	; 0x34
 8000252:	4b48      	ldr	r3, [pc, #288]	; (8000374 <GPIO_PCLKControl+0x170>)
 8000254:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000256:	4b47      	ldr	r3, [pc, #284]	; (8000374 <GPIO_PCLKControl+0x170>)
 8000258:	2102      	movs	r1, #2
 800025a:	430a      	orrs	r2, r1
 800025c:	635a      	str	r2, [r3, #52]	; 0x34
};
 800025e:	e085      	b.n	800036c <GPIO_PCLKControl+0x168>
		else if(pGPIOx == GPIOC){
 8000260:	687b      	ldr	r3, [r7, #4]
 8000262:	4a46      	ldr	r2, [pc, #280]	; (800037c <GPIO_PCLKControl+0x178>)
 8000264:	4293      	cmp	r3, r2
 8000266:	d10c      	bne.n	8000282 <GPIO_PCLKControl+0x7e>
			GPIOC_CLK_EN();
 8000268:	4b42      	ldr	r3, [pc, #264]	; (8000374 <GPIO_PCLKControl+0x170>)
 800026a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800026c:	4b41      	ldr	r3, [pc, #260]	; (8000374 <GPIO_PCLKControl+0x170>)
 800026e:	2104      	movs	r1, #4
 8000270:	438a      	bics	r2, r1
 8000272:	635a      	str	r2, [r3, #52]	; 0x34
 8000274:	4b3f      	ldr	r3, [pc, #252]	; (8000374 <GPIO_PCLKControl+0x170>)
 8000276:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000278:	4b3e      	ldr	r3, [pc, #248]	; (8000374 <GPIO_PCLKControl+0x170>)
 800027a:	2104      	movs	r1, #4
 800027c:	430a      	orrs	r2, r1
 800027e:	635a      	str	r2, [r3, #52]	; 0x34
};
 8000280:	e074      	b.n	800036c <GPIO_PCLKControl+0x168>
		else if(pGPIOx == GPIOD){
 8000282:	687b      	ldr	r3, [r7, #4]
 8000284:	4a3e      	ldr	r2, [pc, #248]	; (8000380 <GPIO_PCLKControl+0x17c>)
 8000286:	4293      	cmp	r3, r2
 8000288:	d10c      	bne.n	80002a4 <GPIO_PCLKControl+0xa0>
			GPIOD_CLK_EN();
 800028a:	4b3a      	ldr	r3, [pc, #232]	; (8000374 <GPIO_PCLKControl+0x170>)
 800028c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800028e:	4b39      	ldr	r3, [pc, #228]	; (8000374 <GPIO_PCLKControl+0x170>)
 8000290:	2108      	movs	r1, #8
 8000292:	438a      	bics	r2, r1
 8000294:	635a      	str	r2, [r3, #52]	; 0x34
 8000296:	4b37      	ldr	r3, [pc, #220]	; (8000374 <GPIO_PCLKControl+0x170>)
 8000298:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800029a:	4b36      	ldr	r3, [pc, #216]	; (8000374 <GPIO_PCLKControl+0x170>)
 800029c:	2108      	movs	r1, #8
 800029e:	430a      	orrs	r2, r1
 80002a0:	635a      	str	r2, [r3, #52]	; 0x34
};
 80002a2:	e063      	b.n	800036c <GPIO_PCLKControl+0x168>
		else if(pGPIOx == GPIOE){
 80002a4:	687b      	ldr	r3, [r7, #4]
 80002a6:	4a37      	ldr	r2, [pc, #220]	; (8000384 <GPIO_PCLKControl+0x180>)
 80002a8:	4293      	cmp	r3, r2
 80002aa:	d10c      	bne.n	80002c6 <GPIO_PCLKControl+0xc2>
			GPIOE_CLK_EN();
 80002ac:	4b31      	ldr	r3, [pc, #196]	; (8000374 <GPIO_PCLKControl+0x170>)
 80002ae:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80002b0:	4b30      	ldr	r3, [pc, #192]	; (8000374 <GPIO_PCLKControl+0x170>)
 80002b2:	2110      	movs	r1, #16
 80002b4:	438a      	bics	r2, r1
 80002b6:	635a      	str	r2, [r3, #52]	; 0x34
 80002b8:	4b2e      	ldr	r3, [pc, #184]	; (8000374 <GPIO_PCLKControl+0x170>)
 80002ba:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80002bc:	4b2d      	ldr	r3, [pc, #180]	; (8000374 <GPIO_PCLKControl+0x170>)
 80002be:	2110      	movs	r1, #16
 80002c0:	430a      	orrs	r2, r1
 80002c2:	635a      	str	r2, [r3, #52]	; 0x34
};
 80002c4:	e052      	b.n	800036c <GPIO_PCLKControl+0x168>
		else if(pGPIOx == GPIOF){
 80002c6:	687b      	ldr	r3, [r7, #4]
 80002c8:	4a2f      	ldr	r2, [pc, #188]	; (8000388 <GPIO_PCLKControl+0x184>)
 80002ca:	4293      	cmp	r3, r2
 80002cc:	d14e      	bne.n	800036c <GPIO_PCLKControl+0x168>
			GPIOF_CLK_EN();
 80002ce:	4b29      	ldr	r3, [pc, #164]	; (8000374 <GPIO_PCLKControl+0x170>)
 80002d0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80002d2:	4b28      	ldr	r3, [pc, #160]	; (8000374 <GPIO_PCLKControl+0x170>)
 80002d4:	2120      	movs	r1, #32
 80002d6:	438a      	bics	r2, r1
 80002d8:	635a      	str	r2, [r3, #52]	; 0x34
 80002da:	4b26      	ldr	r3, [pc, #152]	; (8000374 <GPIO_PCLKControl+0x170>)
 80002dc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80002de:	4b25      	ldr	r3, [pc, #148]	; (8000374 <GPIO_PCLKControl+0x170>)
 80002e0:	2120      	movs	r1, #32
 80002e2:	430a      	orrs	r2, r1
 80002e4:	635a      	str	r2, [r3, #52]	; 0x34
};
 80002e6:	e041      	b.n	800036c <GPIO_PCLKControl+0x168>
		if(pGPIOx == GPIOA){
 80002e8:	687a      	ldr	r2, [r7, #4]
 80002ea:	23a0      	movs	r3, #160	; 0xa0
 80002ec:	05db      	lsls	r3, r3, #23
 80002ee:	429a      	cmp	r2, r3
 80002f0:	d106      	bne.n	8000300 <GPIO_PCLKControl+0xfc>
			GPIOA_CLK_DIS();
 80002f2:	4b20      	ldr	r3, [pc, #128]	; (8000374 <GPIO_PCLKControl+0x170>)
 80002f4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80002f6:	4b1f      	ldr	r3, [pc, #124]	; (8000374 <GPIO_PCLKControl+0x170>)
 80002f8:	2101      	movs	r1, #1
 80002fa:	438a      	bics	r2, r1
 80002fc:	635a      	str	r2, [r3, #52]	; 0x34
};
 80002fe:	e035      	b.n	800036c <GPIO_PCLKControl+0x168>
		else if(pGPIOx == GPIOB){
 8000300:	687b      	ldr	r3, [r7, #4]
 8000302:	4a1d      	ldr	r2, [pc, #116]	; (8000378 <GPIO_PCLKControl+0x174>)
 8000304:	4293      	cmp	r3, r2
 8000306:	d106      	bne.n	8000316 <GPIO_PCLKControl+0x112>
			GPIOB_CLK_DIS();
 8000308:	4b1a      	ldr	r3, [pc, #104]	; (8000374 <GPIO_PCLKControl+0x170>)
 800030a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800030c:	4b19      	ldr	r3, [pc, #100]	; (8000374 <GPIO_PCLKControl+0x170>)
 800030e:	2102      	movs	r1, #2
 8000310:	438a      	bics	r2, r1
 8000312:	635a      	str	r2, [r3, #52]	; 0x34
};
 8000314:	e02a      	b.n	800036c <GPIO_PCLKControl+0x168>
		else if(pGPIOx == GPIOC){
 8000316:	687b      	ldr	r3, [r7, #4]
 8000318:	4a18      	ldr	r2, [pc, #96]	; (800037c <GPIO_PCLKControl+0x178>)
 800031a:	4293      	cmp	r3, r2
 800031c:	d106      	bne.n	800032c <GPIO_PCLKControl+0x128>
			GPIOC_CLK_DIS();
 800031e:	4b15      	ldr	r3, [pc, #84]	; (8000374 <GPIO_PCLKControl+0x170>)
 8000320:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000322:	4b14      	ldr	r3, [pc, #80]	; (8000374 <GPIO_PCLKControl+0x170>)
 8000324:	2104      	movs	r1, #4
 8000326:	438a      	bics	r2, r1
 8000328:	635a      	str	r2, [r3, #52]	; 0x34
};
 800032a:	e01f      	b.n	800036c <GPIO_PCLKControl+0x168>
		else if(pGPIOx == GPIOD){
 800032c:	687b      	ldr	r3, [r7, #4]
 800032e:	4a14      	ldr	r2, [pc, #80]	; (8000380 <GPIO_PCLKControl+0x17c>)
 8000330:	4293      	cmp	r3, r2
 8000332:	d106      	bne.n	8000342 <GPIO_PCLKControl+0x13e>
			GPIOD_CLK_DIS();
 8000334:	4b0f      	ldr	r3, [pc, #60]	; (8000374 <GPIO_PCLKControl+0x170>)
 8000336:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000338:	4b0e      	ldr	r3, [pc, #56]	; (8000374 <GPIO_PCLKControl+0x170>)
 800033a:	2108      	movs	r1, #8
 800033c:	438a      	bics	r2, r1
 800033e:	635a      	str	r2, [r3, #52]	; 0x34
};
 8000340:	e014      	b.n	800036c <GPIO_PCLKControl+0x168>
		else if(pGPIOx == GPIOE){
 8000342:	687b      	ldr	r3, [r7, #4]
 8000344:	4a0f      	ldr	r2, [pc, #60]	; (8000384 <GPIO_PCLKControl+0x180>)
 8000346:	4293      	cmp	r3, r2
 8000348:	d106      	bne.n	8000358 <GPIO_PCLKControl+0x154>
			GPIOE_CLK_DIS();
 800034a:	4b0a      	ldr	r3, [pc, #40]	; (8000374 <GPIO_PCLKControl+0x170>)
 800034c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800034e:	4b09      	ldr	r3, [pc, #36]	; (8000374 <GPIO_PCLKControl+0x170>)
 8000350:	2110      	movs	r1, #16
 8000352:	438a      	bics	r2, r1
 8000354:	635a      	str	r2, [r3, #52]	; 0x34
};
 8000356:	e009      	b.n	800036c <GPIO_PCLKControl+0x168>
		else if(pGPIOx == GPIOF){
 8000358:	687b      	ldr	r3, [r7, #4]
 800035a:	4a0b      	ldr	r2, [pc, #44]	; (8000388 <GPIO_PCLKControl+0x184>)
 800035c:	4293      	cmp	r3, r2
 800035e:	d105      	bne.n	800036c <GPIO_PCLKControl+0x168>
			GPIOF_CLK_DIS();
 8000360:	4b04      	ldr	r3, [pc, #16]	; (8000374 <GPIO_PCLKControl+0x170>)
 8000362:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000364:	4b03      	ldr	r3, [pc, #12]	; (8000374 <GPIO_PCLKControl+0x170>)
 8000366:	2120      	movs	r1, #32
 8000368:	438a      	bics	r2, r1
 800036a:	635a      	str	r2, [r3, #52]	; 0x34
};
 800036c:	46c0      	nop			; (mov r8, r8)
 800036e:	46bd      	mov	sp, r7
 8000370:	b002      	add	sp, #8
 8000372:	bd80      	pop	{r7, pc}
 8000374:	40021000 	.word	0x40021000
 8000378:	50000400 	.word	0x50000400
 800037c:	50000800 	.word	0x50000800
 8000380:	50000c00 	.word	0x50000c00
 8000384:	50001000 	.word	0x50001000
 8000388:	50001400 	.word	0x50001400

0800038c <GPIO_TglPin>:

void GPIO_WritePort(GPIO_RegDef_t *pGPIOx, uint16_t value){
	pGPIOx->ODR = value;
}

void GPIO_TglPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber){
 800038c:	b580      	push	{r7, lr}
 800038e:	b082      	sub	sp, #8
 8000390:	af00      	add	r7, sp, #0
 8000392:	6078      	str	r0, [r7, #4]
 8000394:	000a      	movs	r2, r1
 8000396:	1cfb      	adds	r3, r7, #3
 8000398:	701a      	strb	r2, [r3, #0]
	BitFlp(pGPIOx->ODR, PinNumber);
 800039a:	687b      	ldr	r3, [r7, #4]
 800039c:	695b      	ldr	r3, [r3, #20]
 800039e:	1cfa      	adds	r2, r7, #3
 80003a0:	7812      	ldrb	r2, [r2, #0]
 80003a2:	2101      	movs	r1, #1
 80003a4:	4091      	lsls	r1, r2
 80003a6:	000a      	movs	r2, r1
 80003a8:	405a      	eors	r2, r3
 80003aa:	687b      	ldr	r3, [r7, #4]
 80003ac:	615a      	str	r2, [r3, #20]
}
 80003ae:	46c0      	nop			; (mov r8, r8)
 80003b0:	46bd      	mov	sp, r7
 80003b2:	b002      	add	sp, #8
 80003b4:	bd80      	pop	{r7, pc}
	...

080003b8 <delay>:
 */


#include "STM32G071xx.h"

void delay(void){
 80003b8:	b580      	push	{r7, lr}
 80003ba:	b082      	sub	sp, #8
 80003bc:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i < 500000; i++);
 80003be:	2300      	movs	r3, #0
 80003c0:	607b      	str	r3, [r7, #4]
 80003c2:	e002      	b.n	80003ca <delay+0x12>
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	3301      	adds	r3, #1
 80003c8:	607b      	str	r3, [r7, #4]
 80003ca:	687b      	ldr	r3, [r7, #4]
 80003cc:	4a03      	ldr	r2, [pc, #12]	; (80003dc <delay+0x24>)
 80003ce:	4293      	cmp	r3, r2
 80003d0:	d9f8      	bls.n	80003c4 <delay+0xc>
}
 80003d2:	46c0      	nop			; (mov r8, r8)
 80003d4:	46c0      	nop			; (mov r8, r8)
 80003d6:	46bd      	mov	sp, r7
 80003d8:	b002      	add	sp, #8
 80003da:	bd80      	pop	{r7, pc}
 80003dc:	0007a11f 	.word	0x0007a11f

080003e0 <main>:


int main(void)
{
 80003e0:	b580      	push	{r7, lr}
 80003e2:	b084      	sub	sp, #16
 80003e4:	af00      	add	r7, sp, #0

	GPIO_Handle_t Led;

	Led.pGPIOx = GPIOA;
 80003e6:	1d3b      	adds	r3, r7, #4
 80003e8:	22a0      	movs	r2, #160	; 0xa0
 80003ea:	05d2      	lsls	r2, r2, #23
 80003ec:	601a      	str	r2, [r3, #0]
	Led.GPIOPinConfig.GPIO_PinNumber = GPIO_PIN_5;
 80003ee:	1d3b      	adds	r3, r7, #4
 80003f0:	2205      	movs	r2, #5
 80003f2:	711a      	strb	r2, [r3, #4]
	Led.GPIOPinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80003f4:	1d3b      	adds	r3, r7, #4
 80003f6:	2202      	movs	r2, #2
 80003f8:	719a      	strb	r2, [r3, #6]
	Led.GPIOPinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 80003fa:	1d3b      	adds	r3, r7, #4
 80003fc:	2201      	movs	r2, #1
 80003fe:	715a      	strb	r2, [r3, #5]
	Led.GPIOPinConfig.GPIO_PinOPType = GPIO_OUT_PP;
 8000400:	1d3b      	adds	r3, r7, #4
 8000402:	2200      	movs	r2, #0
 8000404:	721a      	strb	r2, [r3, #8]


	GPIO_PCLKControl(GPIOA, ENABLE);
 8000406:	23a0      	movs	r3, #160	; 0xa0
 8000408:	05db      	lsls	r3, r3, #23
 800040a:	2101      	movs	r1, #1
 800040c:	0018      	movs	r0, r3
 800040e:	f7ff fef9 	bl	8000204 <GPIO_PCLKControl>
	GPIO_Init(&Led);
 8000412:	1d3b      	adds	r3, r7, #4
 8000414:	0018      	movs	r0, r3
 8000416:	f7ff fe75 	bl	8000104 <GPIO_Init>

	while(1){
		GPIO_TglPin(GPIOA, GPIO_PIN_5);
 800041a:	23a0      	movs	r3, #160	; 0xa0
 800041c:	05db      	lsls	r3, r3, #23
 800041e:	2105      	movs	r1, #5
 8000420:	0018      	movs	r0, r3
 8000422:	f7ff ffb3 	bl	800038c <GPIO_TglPin>
		delay();
 8000426:	f7ff ffc7 	bl	80003b8 <delay>
		GPIO_TglPin(GPIOA, GPIO_PIN_5);
 800042a:	e7f6      	b.n	800041a <main+0x3a>

0800042c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800042c:	480d      	ldr	r0, [pc, #52]	; (8000464 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800042e:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000430:	e000      	b.n	8000434 <Reset_Handler+0x8>
 8000432:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000434:	480c      	ldr	r0, [pc, #48]	; (8000468 <LoopForever+0x6>)
  ldr r1, =_edata
 8000436:	490d      	ldr	r1, [pc, #52]	; (800046c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000438:	4a0d      	ldr	r2, [pc, #52]	; (8000470 <LoopForever+0xe>)
  movs r3, #0
 800043a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800043c:	e002      	b.n	8000444 <LoopCopyDataInit>

0800043e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800043e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000440:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000442:	3304      	adds	r3, #4

08000444 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000444:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000446:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000448:	d3f9      	bcc.n	800043e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800044a:	4a0a      	ldr	r2, [pc, #40]	; (8000474 <LoopForever+0x12>)
  ldr r4, =_ebss
 800044c:	4c0a      	ldr	r4, [pc, #40]	; (8000478 <LoopForever+0x16>)
  movs r3, #0
 800044e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000450:	e001      	b.n	8000456 <LoopFillZerobss>

08000452 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000452:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000454:	3204      	adds	r2, #4

08000456 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000456:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000458:	d3fb      	bcc.n	8000452 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800045a:	f000 f811 	bl	8000480 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800045e:	f7ff ffbf 	bl	80003e0 <main>

08000462 <LoopForever>:

LoopForever:
    b LoopForever
 8000462:	e7fe      	b.n	8000462 <LoopForever>
  ldr   r0, =_estack
 8000464:	20009000 	.word	0x20009000
  ldr r0, =_sdata
 8000468:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800046c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000470:	080004e8 	.word	0x080004e8
  ldr r2, =_sbss
 8000474:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000478:	2000001c 	.word	0x2000001c

0800047c <ADC_COMP_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800047c:	e7fe      	b.n	800047c <ADC_COMP_IRQHandler>
	...

08000480 <__libc_init_array>:
 8000480:	b570      	push	{r4, r5, r6, lr}
 8000482:	2600      	movs	r6, #0
 8000484:	4d0c      	ldr	r5, [pc, #48]	; (80004b8 <__libc_init_array+0x38>)
 8000486:	4c0d      	ldr	r4, [pc, #52]	; (80004bc <__libc_init_array+0x3c>)
 8000488:	1b64      	subs	r4, r4, r5
 800048a:	10a4      	asrs	r4, r4, #2
 800048c:	42a6      	cmp	r6, r4
 800048e:	d109      	bne.n	80004a4 <__libc_init_array+0x24>
 8000490:	2600      	movs	r6, #0
 8000492:	f000 f819 	bl	80004c8 <_init>
 8000496:	4d0a      	ldr	r5, [pc, #40]	; (80004c0 <__libc_init_array+0x40>)
 8000498:	4c0a      	ldr	r4, [pc, #40]	; (80004c4 <__libc_init_array+0x44>)
 800049a:	1b64      	subs	r4, r4, r5
 800049c:	10a4      	asrs	r4, r4, #2
 800049e:	42a6      	cmp	r6, r4
 80004a0:	d105      	bne.n	80004ae <__libc_init_array+0x2e>
 80004a2:	bd70      	pop	{r4, r5, r6, pc}
 80004a4:	00b3      	lsls	r3, r6, #2
 80004a6:	58eb      	ldr	r3, [r5, r3]
 80004a8:	4798      	blx	r3
 80004aa:	3601      	adds	r6, #1
 80004ac:	e7ee      	b.n	800048c <__libc_init_array+0xc>
 80004ae:	00b3      	lsls	r3, r6, #2
 80004b0:	58eb      	ldr	r3, [r5, r3]
 80004b2:	4798      	blx	r3
 80004b4:	3601      	adds	r6, #1
 80004b6:	e7f2      	b.n	800049e <__libc_init_array+0x1e>
 80004b8:	080004e0 	.word	0x080004e0
 80004bc:	080004e0 	.word	0x080004e0
 80004c0:	080004e0 	.word	0x080004e0
 80004c4:	080004e4 	.word	0x080004e4

080004c8 <_init>:
 80004c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004ca:	46c0      	nop			; (mov r8, r8)
 80004cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80004ce:	bc08      	pop	{r3}
 80004d0:	469e      	mov	lr, r3
 80004d2:	4770      	bx	lr

080004d4 <_fini>:
 80004d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004d6:	46c0      	nop			; (mov r8, r8)
 80004d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80004da:	bc08      	pop	{r3}
 80004dc:	469e      	mov	lr, r3
 80004de:	4770      	bx	lr
